digraph AST {
  node [shape=box, style=filled, color="#E0E0E0"];
  "0x555555565608" [label="NULL\nType: Root Node\nLine: 0"];
  "0x555555565608" -> "0x5555555669a8";
  "0x5555555669a8" [label="!a\nType: Int Variable Declaration Node\nLine: 1"];
  "0x5555555669a8" -> "0x555555567b98";
  "0x555555567b98" [label="=\nType: Assignment Node\nLine: 1"];
  "0x555555567b98" -> "0x555555567bd8";
  "0x555555567bd8" [label="expression\nType: Expression Node\nLine: 1"];
  "0x555555567bd8" -> "0x555555567c18";
  "0x555555567c18" [label="7\nType: Int Literal Node\nLine: 1"];
  "0x555555565608" -> "0x555555566a38";
  "0x555555566a38" [label="!b2\nType: Int Variable Declaration Node\nLine: 1"];
  "0x555555566a38" -> "0x555555567a78";
  "0x555555567a78" [label="=\nType: Assignment Node\nLine: 1"];
  "0x555555567a78" -> "0x555555567ab8";
  "0x555555567ab8" [label="expression\nType: Expression Node\nLine: 1"];
  "0x555555567ab8" -> "0x555555567af8";
  "0x555555567af8" [label="7\nType: Int Literal Node\nLine: 1"];
  "0x555555565608" -> "0x555555567cd8";
  "0x555555567cd8" [label="!cc\nType: Decimal Literal Node\nLine: 2"];
  "0x555555565608" -> "0x555555567d78";
  "0x555555567d78" [label="!d\nType: Int Variable Declaration Node\nLine: 3"];
  "0x555555565608" -> "0x555555567db8";
  "0x555555567db8" [label="!b2\nType: Assignment Node\nLine: 4"];
  "0x555555567db8" -> "0x555555567e38";
  "0x555555567e38" [label="expression\nType: Expression Node\nLine: 4"];
  "0x555555567e38" -> "0x555555567e78";
  "0x555555567e78" [label="!a\nType: Variable Reference Node\nLine: 4"];
  "0x555555565608" -> "0x555555567eb8";
  "0x555555567eb8" [label="escreva\nType: Function Call Node\nLine: 5"];
  "0x555555567eb8" -> "0x555555567ef8";
  "0x555555567ef8" [label="expression\nType: Expression Node\nLine: 5"];
  "0x555555567ef8" -> "0x555555567f58";
  "0x555555567f58" [label="Escreva um número \nType: Text Literal Node\nLine: 5"];
  "0x555555565608" -> "0x555555567fb8";
  "0x555555567fb8" [label="leia\nType: Function Call Node\nLine: 6"];
  "0x555555567fb8" -> "0x555555567df8";
  "0x555555567df8" [label="expression\nType: Expression Node\nLine: 6"];
  "0x555555567df8" -> "0x555555568068";
  "0x555555568068" [label="!a\nType: Variable Reference Node\nLine: 6"];
  "0x555555565608" -> "0x5555555680c8";
  "0x5555555680c8" [label="expression\nType: Expression Node\nLine: 7"];
  "0x5555555680c8" -> "0x555555568108";
  "0x555555568108" [label="!a\nType: Variable Reference Node\nLine: 7"];
  "0x5555555680c8" -> "0x555555568168";
  "0x555555568168" [label="!b2\nType: Variable Reference Node\nLine: 7"];
  "0x555555565608" -> "0x5555555681a8";
  "0x5555555681a8" [label="escreva\nType: Function Call Node\nLine: 8"];
  "0x5555555681a8" -> "0x555555568248";
  "0x555555568248" [label="expression\nType: Expression Node\nLine: 8"];
  "0x555555568248" -> "0x5555555682a8";
  "0x5555555682a8" [label=" A é maior\nType: Text Literal Node\nLine: 8"];
  "0x5555555681a8" -> "0x555555568308";
  "0x555555568308" [label="expression\nType: Expression Node\nLine: 8"];
  "0x555555568308" -> "0x555555568348";
  "0x555555568348" [label="!a\nType: Variable Reference Node\nLine: 8"];
  "0x555555565608" -> "0x5555555683a8";
  "0x5555555683a8" [label="escreva\nType: Function Call Node\nLine: 9"];
  "0x5555555683a8" -> "0x5555555683e8";
  "0x5555555683e8" [label="expression\nType: Expression Node\nLine: 9"];
  "0x5555555683e8" -> "0x555555568448";
  "0x555555568448" [label="B é maior\nType: Text Literal Node\nLine: 9"];
  "0x5555555683a8" -> "0x5555555684a8";
  "0x5555555684a8" [label="expression\nType: Expression Node\nLine: 9"];
  "0x5555555684a8" -> "0x5555555684e8";
  "0x5555555684e8" [label="!b2\nType: Variable Reference Node\nLine: 9"];
  "0x555555565608" -> "0x555555568548";
  "0x555555568548" [label="!d\nType: Assignment Node\nLine: 10"];
  "0x555555568548" -> "0x5555555685f8";
  "0x5555555685f8" [label="expression\nType: Expression Node\nLine: 10"];
  "0x5555555685f8" -> "0x555555568658";
  "0x555555568658" [label="1\nType: Int Literal Node\nLine: 10"];
  "0x555555565608" -> "0x5555555686b8";
  "0x5555555686b8" [label="expression\nType: Expression Node\nLine: 10"];
  "0x5555555686b8" -> "0x5555555686f8";
  "0x5555555686f8" [label="!d\nType: Variable Reference Node\nLine: 10"];
  "0x5555555686b8" -> "0x555555568758";
  "0x555555568758" [label="100\nType: Int Literal Node\nLine: 10"];
  "0x555555565608" -> "0x555555568798";
  "0x555555568798" [label="expression\nType: Expression Node\nLine: 10"];
  "0x555555568798" -> "0x555555568858";
  "0x555555568858" [label="!d\nType: Variable Reference Node\nLine: 10"];
  "0x555555568798" -> "0x5555555688b8";
  "0x5555555688b8" [label="!d\nType: Variable Reference Node\nLine: 10"];
  "0x555555568798" -> "0x5555555688f8";
  "0x5555555688f8" [label="2\nType: Int Literal Node\nLine: 10"];
  "0x555555565608" -> "0x555555568968";
  "0x555555568968" [label="escreva\nType: Function Call Node\nLine: 11"];
  "0x555555568968" -> "0x5555555689a8";
  "0x5555555689a8" [label="expression\nType: Expression Node\nLine: 11"];
  "0x5555555689a8" -> "0x5555555689e8";
  "0x5555555689e8" [label="D\nType: Text Literal Node\nLine: 11"];
  "0x555555568968" -> "0x555555568a48";
  "0x555555568a48" [label="expression\nType: Expression Node\nLine: 11"];
  "0x555555568a48" -> "0x555555568a88";
  "0x555555568a88" [label="!d\nType: Variable Reference Node\nLine: 11"];
  "0x555555565608" -> "0x555555569af8";
  "0x555555569af8" [label="__declaracao\nType: Function Declaration Node\nLine: 14"];
  "0x555555569af8" -> "0x555555569c18";
  "0x555555569c18" [label="altime\nType: Int Variable Declaration Node\nLine: 15"];
  "0x555555569c18" -> "0x555555569d78";
  "0x555555569d78" [label="=\nType: Assignment Node\nLine: 15"];
  "0x555555569d78" -> "0x555555569db8";
  "0x555555569db8" [label="expression\nType: Expression Node\nLine: 15"];
  "0x555555569db8" -> "0x555555569df8";
  "0x555555569df8" [label="8\nType: Int Literal Node\nLine: 15"];
  "0x555555569af8" -> "0x555555569e98";
  "0x555555569e98" [label="return\nType: Function Call Node\nLine: 17"];
  "0x555555569e98" -> "0x555555569ed8";
  "0x555555569ed8" [label="expression\nType: Expression Node\nLine: 17"];
  "0x555555569ed8" -> "0x555555569f18";
  "0x555555569f18" [label="!gg\nType: Variable Reference Node\nLine: 17"];
  "0x555555569ed8" -> "0x555555569f78";
  "0x555555569f78" [label="8\nType: Int Literal Node\nLine: 17"];
}
