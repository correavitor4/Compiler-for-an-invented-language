digraph AST {
  node [shape=box, style=filled, color="#E0E0E0"];
  "0x555555564608" [label="NULL\nType: Root Node\nLine: 0"];
  "0x555555564608" -> "0x5555555656b8";
  "0x5555555656b8" [label="!a\nType: Text Variable Declaration Node\nLine: 1"];
  "0x5555555656b8" -> "0x555555565758";
  "0x555555565758" [label="7\nType: Int Literal Node\nLine: 1"];
  "0x555555564608" -> "0x5555555657b8";
  "0x5555555657b8" [label="!cc\nType: Int Variable Declaration Node\nLine: 2"];
  "0x555555564608" -> "0x555555565828";
  "0x555555565828" [label="!d\nType: Text Variable Declaration Node\nLine: 3"];
  "0x555555564608" -> "0x5555555658c8";
  "0x5555555658c8" [label="!b2\nType: Assignment Node\nLine: 4"];
  "0x5555555658c8" -> "0x555555565908";
  "0x555555565908" [label="!a\nType: Variable Reference Node\nLine: 4"];
  "0x555555564608" -> "0x555555565948";
  "0x555555565948" [label="escreva\nType: Function Call Node\nLine: 5"];
  "0x555555565948" -> "0x5555555659c8";
  "0x5555555659c8" [label="Escreva um número \nType: Text Literal Node\nLine: 5"];
  "0x555555564608" -> "0x555555565a28";
  "0x555555565a28" [label="leia\nType: Function Call Node\nLine: 6"];
  "0x555555565a28" -> "0x555555565a68";
  "0x555555565a68" [label="!a\nType: Variable Reference Node\nLine: 6"];
  "0x555555564608" -> "0x555555565ac8";
  "0x555555565ac8" [label="!a\nType: Variable Reference Node\nLine: 7"];
  "0x555555564608" -> "0x555555565988";
  "0x555555565988" [label="!b2\nType: Variable Reference Node\nLine: 7"];
  "0x555555564608" -> "0x555555566788";
  "0x555555566788" [label="escreva\nType: Function Call Node\nLine: 8"];
  "0x555555566788" -> "0x555555566828";
  "0x555555566828" [label=" A é maior\nType: Text Literal Node\nLine: 8"];
  "0x555555566788" -> "0x555555566888";
  "0x555555566888" [label="!a\nType: Variable Reference Node\nLine: 8"];
  "0x555555564608" -> "0x5555555668c8";
  "0x5555555668c8" [label="escreva\nType: Function Call Node\nLine: 9"];
  "0x5555555668c8" -> "0x555555566908";
  "0x555555566908" [label="B é maior\nType: Text Literal Node\nLine: 9"];
  "0x5555555668c8" -> "0x555555566968";
  "0x555555566968" [label="!b2\nType: Variable Reference Node\nLine: 9"];
  "0x555555564608" -> "0x5555555669a8";
  "0x5555555669a8" [label="!d\nType: Assignment Node\nLine: 10"];
  "0x5555555669a8" -> "0x555555566a58";
  "0x555555566a58" [label="1\nType: Int Literal Node\nLine: 10"];
  "0x555555564608" -> "0x555555566ab8";
  "0x555555566ab8" [label="!d\nType: Variable Reference Node\nLine: 10"];
  "0x555555564608" -> "0x555555566af8";
  "0x555555566af8" [label="100\nType: Int Literal Node\nLine: 10"];
  "0x555555564608" -> "0x555555566bb8";
  "0x555555566bb8" [label="!d\nType: Variable Reference Node\nLine: 10"];
  "0x555555564608" -> "0x555555566bf8";
  "0x555555566bf8" [label="!d\nType: Variable Reference Node\nLine: 10"];
  "0x555555564608" -> "0x555555566cc8";
  "0x555555566cc8" [label="2\nType: Int Literal Node\nLine: 10"];
  "0x555555564608" -> "0x555555566d08";
  "0x555555566d08" [label="escreva\nType: Function Call Node\nLine: 11"];
  "0x555555566d08" -> "0x555555566de8";
  "0x555555566de8" [label="D\nType: Text Literal Node\nLine: 11"];
  "0x555555566d08" -> "0x555555566e48";
  "0x555555566e48" [label="!d\nType: Variable Reference Node\nLine: 11"];
}
