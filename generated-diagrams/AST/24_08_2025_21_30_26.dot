digraph AST {
  node [shape=box, style=filled, color="#E0E0E0"];
  "0x555555564608" [label="NULL\nType: Root Node\nLine: 0"];
  "0x555555564608" -> "0x5555555656e8";
  "0x5555555656e8" [label="!a\nType: Assignment Node\nLine: 1"];
  "0x5555555656e8" -> "0x555555565928";
  "0x555555565928" [label="=\nType: Assignment Node\nLine: 1"];
  "0x555555565928" -> "0x555555565968";
  "0x555555565968" [label="7\nType: Int Literal Node\nLine: 1"];
  "0x555555564608" -> "0x555555565778";
  "0x555555565778" [label="!b2\nType: Assignment Node\nLine: 1"];
  "0x555555565778" -> "0x555555565868";
  "0x555555565868" [label="=\nType: Assignment Node\nLine: 1"];
  "0x555555565868" -> "0x5555555658a8";
  "0x5555555658a8" [label="7\nType: Int Literal Node\nLine: 1"];
  "0x555555564608" -> "0x555555565a08";
  "0x555555565a08" [label="!cc\nType: Int Literal Node\nLine: 2"];
  "0x555555564608" -> "0x555555565aa8";
  "0x555555565aa8" [label="!d\nType: Assignment Node\nLine: 3"];
  "0x555555564608" -> "0x555555566738";
  "0x555555566738" [label="!b2\nType: Assignment Node\nLine: 4"];
  "0x555555566738" -> "0x5555555667b8";
  "0x5555555667b8" [label="!a\nType: Variable Reference Node\nLine: 4"];
  "0x555555564608" -> "0x5555555667f8";
  "0x5555555667f8" [label="escreva\nType: Function Call Node\nLine: 5"];
  "0x5555555667f8" -> "0x555555566838";
  "0x555555566838" [label="Escreva um número \nType: Text Literal Node\nLine: 5"];
  "0x555555564608" -> "0x555555566878";
  "0x555555566878" [label="leia\nType: Function Call Node\nLine: 6"];
  "0x555555566878" -> "0x555555566778";
  "0x555555566778" [label="!a\nType: Variable Reference Node\nLine: 6"];
  "0x555555564608" -> "0x555555566908";
  "0x555555566908" [label="!a\nType: Variable Reference Node\nLine: 7"];
  "0x555555564608" -> "0x555555566948";
  "0x555555566948" [label="!b2\nType: Variable Reference Node\nLine: 7"];
  "0x555555564608" -> "0x5555555669e8";
  "0x5555555669e8" [label="escreva\nType: Function Call Node\nLine: 8"];
  "0x5555555669e8" -> "0x555555566a28";
  "0x555555566a28" [label=" A é maior\nType: Text Literal Node\nLine: 8"];
  "0x5555555669e8" -> "0x555555566a88";
  "0x555555566a88" [label="!a\nType: Variable Reference Node\nLine: 8"];
  "0x555555564608" -> "0x555555566ac8";
  "0x555555566ac8" [label="escreva\nType: Function Call Node\nLine: 9"];
  "0x555555566ac8" -> "0x555555566b78";
  "0x555555566b78" [label="B é maior\nType: Text Literal Node\nLine: 9"];
  "0x555555566ac8" -> "0x555555566bd8";
  "0x555555566bd8" [label="!b2\nType: Variable Reference Node\nLine: 9"];
  "0x555555564608" -> "0x555555566c18";
  "0x555555566c18" [label="!d\nType: Assignment Node\nLine: 10"];
  "0x555555566c18" -> "0x555555566c58";
  "0x555555566c58" [label="1\nType: Int Literal Node\nLine: 10"];
  "0x555555564608" -> "0x555555566cb8";
  "0x555555566cb8" [label="!d\nType: Variable Reference Node\nLine: 10"];
  "0x555555564608" -> "0x555555566d78";
  "0x555555566d78" [label="100\nType: Int Literal Node\nLine: 10"];
  "0x555555564608" -> "0x555555566db8";
  "0x555555566db8" [label="!d\nType: Variable Reference Node\nLine: 10"];
  "0x555555564608" -> "0x555555566e88";
  "0x555555566e88" [label="!d\nType: Variable Reference Node\nLine: 10"];
  "0x555555564608" -> "0x555555566ec8";
  "0x555555566ec8" [label="2\nType: Int Literal Node\nLine: 10"];
  "0x555555564608" -> "0x555555566fa8";
  "0x555555566fa8" [label="escreva\nType: Function Call Node\nLine: 11"];
  "0x555555566fa8" -> "0x555555566fe8";
  "0x555555566fe8" [label="D\nType: Text Literal Node\nLine: 11"];
  "0x555555566fa8" -> "0x555555567048";
  "0x555555567048" [label="!d\nType: Variable Reference Node\nLine: 11"];
}
