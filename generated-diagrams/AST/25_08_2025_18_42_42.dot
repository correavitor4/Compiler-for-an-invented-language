digraph AST {
  node [shape=box, style=filled, color="#E0E0E0"];
  "0x555555565608" [label="NULL\nType: Root Node\nLine: 0"];
  "0x555555565608" -> "0x5555555666e8";
  "0x5555555666e8" [label="!a\nType: Int Variable Declaration Node\nLine: 1"];
  "0x5555555666e8" -> "0x555555566928";
  "0x555555566928" [label="=\nType: Assignment Node\nLine: 1"];
  "0x555555566928" -> "0x555555566968";
  "0x555555566968" [label="7\nType: Int Literal Node\nLine: 1"];
  "0x555555565608" -> "0x555555566778";
  "0x555555566778" [label="!b2\nType: Int Variable Declaration Node\nLine: 1"];
  "0x555555566778" -> "0x555555566868";
  "0x555555566868" [label="=\nType: Assignment Node\nLine: 1"];
  "0x555555566868" -> "0x5555555668a8";
  "0x5555555668a8" [label="7\nType: Int Literal Node\nLine: 1"];
  "0x555555565608" -> "0x555555566a08";
  "0x555555566a08" [label="!cc\nType: Decimal Literal Node\nLine: 2"];
  "0x555555565608" -> "0x555555566aa8";
  "0x555555566aa8" [label="!d\nType: Int Variable Declaration Node\nLine: 3"];
  "0x555555565608" -> "0x555555567738";
  "0x555555567738" [label="!b2\nType: Assignment Node\nLine: 4"];
  "0x555555567738" -> "0x5555555677b8";
  "0x5555555677b8" [label="!a\nType: Variable Reference Node\nLine: 4"];
  "0x555555565608" -> "0x5555555677f8";
  "0x5555555677f8" [label="escreva\nType: Function Call Node\nLine: 5"];
  "0x5555555677f8" -> "0x555555567838";
  "0x555555567838" [label="Escreva um número \nType: Text Literal Node\nLine: 5"];
  "0x555555565608" -> "0x555555567878";
  "0x555555567878" [label="leia\nType: Function Call Node\nLine: 6"];
  "0x555555567878" -> "0x555555567778";
  "0x555555567778" [label="!a\nType: Variable Reference Node\nLine: 6"];
  "0x555555565608" -> "0x555555567908";
  "0x555555567908" [label="!a\nType: Variable Reference Node\nLine: 7"];
  "0x555555565608" -> "0x555555567948";
  "0x555555567948" [label="!b2\nType: Variable Reference Node\nLine: 7"];
  "0x555555565608" -> "0x5555555679e8";
  "0x5555555679e8" [label="escreva\nType: Function Call Node\nLine: 8"];
  "0x5555555679e8" -> "0x555555567a28";
  "0x555555567a28" [label=" A é maior\nType: Text Literal Node\nLine: 8"];
  "0x5555555679e8" -> "0x555555567a88";
  "0x555555567a88" [label="!a\nType: Variable Reference Node\nLine: 8"];
  "0x555555565608" -> "0x555555567ac8";
  "0x555555567ac8" [label="escreva\nType: Function Call Node\nLine: 9"];
  "0x555555567ac8" -> "0x555555567b78";
  "0x555555567b78" [label="B é maior\nType: Text Literal Node\nLine: 9"];
  "0x555555567ac8" -> "0x555555567bd8";
  "0x555555567bd8" [label="!b2\nType: Variable Reference Node\nLine: 9"];
  "0x555555565608" -> "0x555555567c18";
  "0x555555567c18" [label="!d\nType: Assignment Node\nLine: 10"];
  "0x555555567c18" -> "0x555555567c58";
  "0x555555567c58" [label="1\nType: Int Literal Node\nLine: 10"];
  "0x555555565608" -> "0x555555567cb8";
  "0x555555567cb8" [label="!d\nType: Variable Reference Node\nLine: 10"];
  "0x555555565608" -> "0x555555567d78";
  "0x555555567d78" [label="100\nType: Int Literal Node\nLine: 10"];
  "0x555555565608" -> "0x555555567db8";
  "0x555555567db8" [label="!d\nType: Variable Reference Node\nLine: 10"];
  "0x555555565608" -> "0x555555567e88";
  "0x555555567e88" [label="!d\nType: Variable Reference Node\nLine: 10"];
  "0x555555565608" -> "0x555555567ec8";
  "0x555555567ec8" [label="2\nType: Int Literal Node\nLine: 10"];
  "0x555555565608" -> "0x555555567fa8";
  "0x555555567fa8" [label="escreva\nType: Function Call Node\nLine: 11"];
  "0x555555567fa8" -> "0x555555567fe8";
  "0x555555567fe8" [label="D\nType: Text Literal Node\nLine: 11"];
  "0x555555567fa8" -> "0x555555568048";
  "0x555555568048" [label="!d\nType: Variable Reference Node\nLine: 11"];
}
